"""
Django settings for easyparking project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-o$n*=8bq_ivwjgazx##%32ha3*_=tpx%^9z6=ok!zfwspr*!45"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

APPEND_SLASH = False

LOGIN_REDIRECT_URL = 'homepage'  # เปลี่ยนเส้นทางไปหน้าโปรไฟล์
LOGOUT_REDIRECT_URL = 'homepage'  # Redirect ไปหน้าแรกหลังออกจากระบบ
LOGIN_URL = 'login'  # URL ของหน้า login


# Session Settings
#SESSION_COOKIE_AGE = 1800  # 30 นาที
#SESSION_EXPIRE_AT_BROWSER_CLOSE = True # หมดอายุเมื่อปิดเบราว์เซอร์
#SESSION_SAVE_EVERY_REQUEST = True  # รีเฟรชเวลาหมดอายุเมื่อมีการร้องขอใหม่
#SESSION_COOKIE_AGE = 10  # 10 วินาที
#SESSION_ENGINE = 'django.contrib.sessions.backends.file'




load_dotenv()

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

PASSWORD_RESET_TIMEOUT_DAYS = 1  # กำหนดให้ลิงก์หมดอายุใน 1 วัน


AUTH_USER_MODEL = 'easypark.CustomUser'

'''LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'DEBUG',
        },
    },
}'''




MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')






# Application definition

INSTALLED_APPS = [
    "easypark",
    'django_cron',
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
]



ROOT_URLCONF = "easyparking.urls"





TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # ชี้ไปที่โฟลเดอร์ templates
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = "easyparking.wsgi.application"
ASGI_APPLICATION = "easyparking.asgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DEBUG = os.getenv("DEBUG", "0") == "1"
ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS", "").split(",")

STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "staticfiles"

MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

# Database
DATABASES = {
    "default": {
        "ENGINE": os.getenv("DB_ENGINE", "django.db.backends.postgresql"),
        "NAME": os.getenv("DB_NAME", "easyparking"),
        "USER": os.getenv("DB_USER", "postgres"),
        "PASSWORD": os.getenv("DB_PASSWORD", ""),
        "HOST": os.getenv("DB_HOST", "db"),
        "PORT": os.getenv("DB_PORT", "5432"),
    }
}


# เปิด compression / manifest (แนะนำใน prod)
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"




# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',  #ป้องกันไม่ให้ผู้ใช้ตั้งรหัสผ่านที่คล้ายกับชื่อผู้ใช้ อีเมล หรือข้อมูลส่วนตัวอื่นๆ
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 8,  # กำหนดความยาวขั้นต่ำของรหัสผ่าน
        },
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },   #ป้องกันไม่ให้ผู้ใช้ตั้งรหัสผ่านที่เป็นคำธรรมดาหรือคำนิยม เช่น "password", "123456"
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },      #ป้องกันไม่ให้รหัสผ่านมีแค่ตัวเลขล้วน เช่น "12345678"
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = 'Asia/Bangkok'
USE_TZ = False

USE_I18N = True




# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/





STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / "static",
]
STATIC_ROOT = BASE_DIR / "staticfiles"





# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
